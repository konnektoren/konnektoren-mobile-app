name: "Build and Publish App"

on:
  push:
    branches:
      - release
  workflow_dispatch:
    inputs:
      build_download_page:
        description: "Build download page after app"
        type: boolean
        default: true

# This workflow builds the app for all platforms and creates a GitHub release

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above)
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Linux
            args: ""
          - platform: "windows-latest" # for Windows
            args: ""

    runs-on: ${{ matrix.platform }}

    outputs:
      app_version: ${{ steps.get_app_version.outputs.version }}
      release_tag: ${{ steps.get_app_version.outputs.tag }}
      release_created: ${{ steps.tauri_build.outputs.releaseCreated }}

    steps:
      - uses: actions/checkout@v4

      - name: Install just
        uses: extractions/setup-just@v1
        with:
          just-version: "1.14"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install Tauri CLI
        run: cargo install tauri-cli

      - name: Add wasm target
        run: rustup target add wasm32-unknown-unknown

      - uses: cargo-bins/cargo-binstall@main

      - name: Install Trunk
        run: cargo binstall trunk -y

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Setup Dependencies
        run: just setup-styles

      # Extract app version for later use
      - name: Get app version
        id: get_app_version
        shell: bash
        run: |
          # Extract version from Cargo.toml
          VERSION=$(grep '^version' Cargo.toml | head -1 | cut -d '"' -f 2)
          echo "Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=konnektoren-mobile-app-v$VERSION" >> $GITHUB_OUTPUT

      # Build the app with Tauri
      - name: Build with Tauri
        id: tauri_build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tauriScript: cargo tauri
          tagName: konnektoren-mobile-app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}

      # Trigger the download page workflow only from one of the matrix jobs
      - name: Trigger download page workflow
        if: ${{ matrix.platform == 'ubuntu-22.04' && (github.event_name != 'workflow_dispatch' || inputs.build_download_page) }}
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-published
          client-payload: '{"release_tag": "${{ steps.get_app_version.outputs.tag }}", "app_version": "${{ steps.get_app_version.outputs.version }}"}'
